apiVersion: apps/v1
kind: Deployment
metadata:
  name: rate-limiter
  namespace: rate-limiter
  labels:
    app.kubernetes.io/name: distributed-rate-limiter
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: distributed-rate-limiter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: distributed-rate-limiter
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        config.hash: "placeholder"  # Will be updated by CI/CD
    spec:
      serviceAccountName: rate-limiter
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: rate-limiter
        image: ghcr.io/uppnrise/distributed-rate-limiter:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: JAVA_OPTS
          value: "-Xmx1g -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
        - name: SPRING_REDIS_HOST
          value: "redis-service"
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rate-limiter-secrets
              key: redis-password
              optional: true
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: rate-limiter-secrets
              key: admin-username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rate-limiter-secrets
              key: admin-password
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: rate-limiter-secrets
              key: api-keys
              optional: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 15  # Allow time for graceful shutdown
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: rate-limiter-config
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - distributed-rate-limiter
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: rate-limiter-service
  namespace: rate-limiter
  labels:
    app.kubernetes.io/name: distributed-rate-limiter
    app.kubernetes.io/component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: distributed-rate-limiter
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rate-limiter-pdb
  namespace: rate-limiter
  labels:
    app.kubernetes.io/name: distributed-rate-limiter
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: distributed-rate-limiter