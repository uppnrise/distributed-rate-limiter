<?xml version="1.0" encoding="UTF-8"?>
<svg width="900" height="700" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #2c3e50; text-anchor: middle; }
      .actor { font-family: Arial, sans-serif; font-size: 14px; fill: #2c3e50; text-anchor: middle; font-weight: bold; }
      .message { font-family: Arial, sans-serif; font-size: 11px; fill: #2c3e50; }
      .note { font-family: Arial, sans-serif; font-size: 10px; fill: #7f8c8d; font-style: italic; }
      .actor-box { fill: #ecf0f1; stroke: #3498db; stroke-width: 2; rx: 5; }
      .client-box { fill: #f39c12; stroke: #e67e22; stroke-width: 2; rx: 5; }
      .app-box { fill: #2ecc71; stroke: #27ae60; stroke-width: 2; rx: 5; }
      .redis-box { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; rx: 5; }
      .lifeline { stroke: #bdc3c7; stroke-width: 2; stroke-dasharray: 5,5; }
      .arrow { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .return-arrow { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 3,3; }
      .self-arrow { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .activation { fill: #d5dbdb; stroke: #95a5a6; stroke-width: 1; }
      .success { fill: #d5f4e6; stroke: #27ae60; stroke-width: 1; }
      .error { fill: #fadbd8; stroke: #e74c3c; stroke-width: 1; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="450" y="30" class="title">Rate Limit Check Flow Sequence</text>
  
  <!-- Actors -->
  <rect x="50" y="60" width="100" height="40" class="client-box"/>
  <text x="100" y="85" class="actor">Client</text>
  
  <rect x="250" y="60" width="120" height="40" class="app-box"/>
  <text x="310" y="85" class="actor">Rate Limiter</text>
  
  <rect x="450" y="60" width="100" height="40" class="redis-box"/>
  <text x="500" y="85" class="actor">Redis</text>
  
  <rect x="650" y="60" width="120" height="40" class="actor-box"/>
  <text x="710" y="85" class="actor">Configuration</text>
  
  <!-- Lifelines -->
  <line x1="100" y1="100" x2="100" y2="650" class="lifeline"/>
  <line x1="310" y1="100" x2="310" y2="650" class="lifeline"/>
  <line x1="500" y1="100" x2="500" y2="650" class="lifeline"/>
  <line x1="710" y1="100" x2="710" y2="650" class="lifeline"/>
  
  <!-- Messages -->
  
  <!-- 1. Rate limit request -->
  <line x1="100" y1="140" x2="310" y2="140" class="arrow"/>
  <text x="205" y="135" class="message">POST /api/ratelimit/check</text>
  <text x="205" y="150" class="note">{key: "user:123", tokens: 1}</text>
  
  <!-- Activation box for Rate Limiter -->
  <rect x="305" y="135" width="10" height="480" class="activation"/>
  
  <!-- 2. Get configuration -->
  <line x1="315" y1="180" x2="705" y2="180" class="arrow"/>
  <text x="510" y="175" class="message">getConfiguration(key)</text>
  
  <!-- Activation box for Configuration -->
  <rect x="705" y="175" width="10" height="40" class="activation"/>
  
  <!-- 3. Return configuration -->
  <line x1="705" y1="200" x2="315" y2="200" class="return-arrow"/>
  <text x="510" y="195" class="message">capacity=10, refillRate=2</text>
  
  <!-- 4. Get current bucket state -->
  <line x1="315" y1="240" x2="495" y2="240" class="arrow"/>
  <text x="405" y="235" class="message">GET bucket state</text>
  <text x="405" y="250" class="note">key: "user:123"</text>
  
  <!-- Activation box for Redis -->
  <rect x="495" y="235" width="10" height="120" class="activation"/>
  
  <!-- 5. Return bucket state -->
  <line x1="495" y1="270" x2="315" y2="270" class="return-arrow"/>
  <text x="405" y="265" class="message">tokens=8, lastRefill=1234567890</text>
  
  <!-- 6. Calculate token refill -->
  <path d="M 315 310 Q 340 320 315 330" class="self-arrow"/>
  <text x="350" y="315" class="message">calculateRefill()</text>
  <text x="350" y="330" class="note">elapsed time × refillRate</text>
  
  <!-- 7. Check if request allowed -->
  <path d="M 315 360 Q 340 370 315 380" class="self-arrow"/>
  <text x="350" y="365" class="message">checkAllowed()</text>
  <text x="350" y="380" class="note">tokens ≥ requested?</text>
  
  <!-- Decision point indicator -->
  <rect x="300" y="400" width="20" height="30" class="success"/>
  <text x="310" y="418" class="note">✓</text>
  
  <!-- 8. Update bucket state -->
  <line x1="315" y1="450" x2="495" y2="450" class="arrow"/>
  <text x="405" y="445" class="message">UPDATE bucket</text>
  <text x="405" y="460" class="note">tokens=7, lastRefill=now</text>
  
  <!-- 9. Confirm update -->
  <line x1="495" y1="480" x2="315" y2="480" class="return-arrow"/>
  <text x="405" y="475" class="message">OK</text>
  
  <!-- 10. Record metrics -->
  <path d="M 315 520 Q 340 530 315 540" class="self-arrow"/>
  <text x="350" y="525" class="message">recordMetrics()</text>
  <text x="350" y="540" class="note">increment allowed counter</text>
  
  <!-- 11. Return response -->
  <line x1="310" y1="580" x2="100" y2="580" class="return-arrow"/>
  <text x="205" y="575" class="message">HTTP 200 OK</text>
  <text x="205" y="590" class="note">{allowed: true, tokens: 7}</text>
  
  <!-- Error case branch -->
  <text x="50" y="630" class="note">If tokens insufficient: return {allowed: false, retryAfter: X}</text>
  
  <!-- Performance notes -->
  <text x="450" y="680" class="title">Key Performance Features</text>
  <text x="50" y="700" class="note">• Thread-safe atomic operations • Redis pipelining for performance • Configurable per-key limits • Real-time metrics collection</text>
</svg>