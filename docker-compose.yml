services:
  redis:
    image: redis:8-alpine
    container_name: distributed-rate-limiter-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - rate-limiter-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: distributed-rate-limiter-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_SHUTDOWN=graceful
      - SPRING_LIFECYCLE_TIMEOUT_PER_SHUTDOWN_PHASE=30s
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rate-limiter-network
    restart: unless-stopped

volumes:
  redis-data:
    driver: local

networks:
  rate-limiter-network:
    driver: bridge